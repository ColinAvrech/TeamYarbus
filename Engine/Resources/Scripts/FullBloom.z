class Josh : Component
{
	//var Owner:GameObject = null;
	var ObjectSys:ObjectSystem = null;
	var OHai : String = "";
	var Obj: GameObject = null;
	var Detector: MouseDetector = null;

	var SpawnedObject:GameObject = null;
	var MenuObjects:ZArray = null;
	
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
	this.Owner = owner;
	
	//this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
	
	//var obj = new Dot();
	
	//this.ObjectSys
	Console.WriteLine(ZInterface.WindowSystem);
	this.MenuObjects = ZInterface.ObjectSystem.LoadLevelAdditive("HowToPlay");
	this.MenuObjects = ZInterface.ObjectSystem.LoadLevelAdditive("MainMenu");
	var scale = this.Owner.Transform.GetScale();
	var trans =  this.Owner.Transform.GetTranslation();
	var len = this.MenuObjects.Length;
	for (var i:Integer = 0; i < len; i += 1)
	{
		var obj = this.MenuObjects.Get(i);
		var prevScale = obj.Transform.GetScale();
		obj.Transform.SetScale(Real3(prevScale.X * scale.X, prevScale.Y * scale.Y, prevScale.Z * scale.Z));
		obj.Transform.Translate(0,0,trans.Z);
	}
	/*
	for (var i = 0; i < list.Length; i += 1)
	{
		if(list.Get(i).GetName());
	}
	*/
	
	//Console.WriteLine(ZInterface.ObjectSystem.FindObjectByName("ExitGame"));
	
	//list.Get(11).Transform.Translate(1,1,0);
	Console.WriteLine(ZInterface.ObjectSystem);
	//this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
	//this.Detector.Rect.Width = 6.15839389087326;
	//this.Detector.Rect.Height = 6.15839389087326;
	
	
	//Cinder.Connect(this, Events.UpdateEvent, this.LogicUpdate);
	//Cinder.Connect(this, Events.KeyEvent, this.KeyIsPressed);
	//var obj : GameObject = Cinder.objsys.CreateObject();
	//Console.Writeline(obj);
	//Console.Writeline(obj);
	//Console.WriteLine(new Player());
	//Console.WriteLine(this.Owner);
	EventSystem.Connect("KESCAPE", this.EscapePressed);
	//EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	//Console.WriteLine(this);
	//Console.WriteLine("hello");
	//var gameobject = this.ObjectSys.CreateObject();
	//Console.WriteLine("GAMEOBJECT");
	//gameobject.AddComponent("Transform");
	//Console.WriteLine("COMPONENTT");
	//gameobject.Transform;
	//Console.WriteLine(gameobject.Transform);
	//gameobject.AddComponent("Sprite");
	//newsprite.LoadSprite("Env.png", "Default");
	//Console.WriteLine(gameobject.Sprite.Texture.Name);
	//this.SpawnedObject = gameobject;
	
	
	//var file:ZilchFile = ZInterface.OpenFile("..//..//Resources//Scripts//test.z");
	//var i = 0;
	//Console.WriteLine(file.ReadLine(100) == '\0');
	/*
	while (file.ReadLine(i) != "\0")
	{
		Console.WriteLine(file.ReadLine(i));
		i += 1;
	}
	*/

	//var collider:CircleCollider = this.Owner.ShapeCollider as any as CircleCollider;

	
	
	//Console.WriteLine(collider.Radius);
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		var transform1 = this.Detector.Dot1.Object.Transform;
		var transform2 = this.Detector.Dot2.Object.Transform;
		var pos1 = this.Detector.Dot1.Object.Transform.GetTranslation();
		var pos11 = transform1.GetScreenPosition(Real2(0,0));
		var pos2 = this.Detector.Dot2.Object.Transform.GetTranslation();
		var pos22 = transform2.GetScreenPosition(Real2(0,1));
		//Console.WriteLine(Camera.Main.Aspect);
		if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Outside");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			Console.WriteLine("Enter");
			this.Owner.Sprite.ChangeTexture("Circle.png");
		}
		else if (e.State == MouseState.MouseExit)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("Default");
		}
		//Console.WriteLine("MOUSE!");
	}
	
	function Ping(e: UIEvent)
	{
		Console.WriteLine("PING!");
		Console.WriteLine(e.Message);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
	//Console.WriteLine(e.TimePassed);
	//this.SpawnedObject.Transform.Translate(0,0.1,0);
		//Console.WriteLine(ZInterface.WindowSystem.GetNormalMousePosition());
		//this.Detector.Rect.Width = this.Owner.Transform.GetScreenPosition(Real2(1, 1)).X;
		//this.Detector.Rect.Height = this.Owner.Transform.GetScreenPosition(Real2(1, 1)).Y;
	//Console.WriteLine(Camera.GetWorldMousePosition());
	}

	function EscapePressed(e: KeyEvent)
	{
		if (InputManager.IsKeyTriggered(Keys.ESCAPE))
		{
			
			if (this.MenuObjects.Get(0).Sprite.GetColor().W == 0)
			{
				this.ChangeMenuAlpha(1);
			}
			else
			{
				this.ChangeMenuAlpha(0);
				this.MenuObjects.Get(2).Sprite.ChangeTexture("UIResumeBlack.png");
				this.MenuObjects.Get(3).Sprite.ChangeTexture("UIHowToPlayBlack.png");
				this.MenuObjects.Get(4).Sprite.ChangeTexture("UIExitBlack.png");
			}
			Console.WriteLine("PAUSED!");
			ZInterface.TogglePaused();
		}
	}
	
	function ChangeMenuAlpha(alpha:Integer)
	{
		
		var len = this.MenuObjects.Length;
		for (var i:Integer = 0; i < len; i += 1)
		{
			this.MenuObjects.Get(i).Sprite.ChangeColor(1,1,1,alpha);
		}
	}

}

class Dot
{
	var Object: GameObject = null;
	
	constructor()
	{
		this.Object = ZInterface.ObjectSystem.CreateObject();
		
		this.Object.AddComponent("Transform");
		this.Object.Transform.SetTranslation(Real3(0,0,-1));
		//Console.WriteLine(this.Object.Transform.GetTranslation());
		this.Object.Transform.Scale(0.05, 0.05, 0.05);
		
		this.Object.AddComponent("Sprite");
		this.Object.Sprite.ChangeTexture("Circle.png");
		
	}
	
	
}

class Cinder
{
	[Static]
	var ScreenUnitRatioX:Real = 3.07919694543663;
	
	[Static]
	var ScreenUnitRatioY:Real = 1.732051615138131;
	
	//NEEDS FIXED ANY TYPE?
	[Static]
	function Connect(eventListener:Josh, eventName:String, functionDelegate:delegate(e:KeyEvent))
	{
		EventSystem.Connect(eventName, functionDelegate);
	}
	
	[Static]
	function MouseToWorldZPlane():Real2
	{
		var position = Camera.GetWorldMousePosition();
		//position.X *= 3.07919694543663;
		//position.Y *= 3.07919694543663;
		var cameraPos = Camera.Main.Owner.Transform.GetTranslation();
		position.X += cameraPos.X;
		position.Y += cameraPos.Y;
		Console.WriteLine(position);
		
		return position;
	}

	sends UpdateEvent:UpdateEvent;
	sends KANY:KeyEvent;
}
