class NewZilch : ZilchComponent
{
	var Butts:Integer = 8;
	var IsTrue:Boolean = true;
	var StrMes:String = "Hello";
	var Comp:Real3 = Real3();
	
	constructor() : base()
	{
		Console.WriteLine("SASA");
	}
	
	function Load()
	{
	}
	
	function Initialize()
	{
		//this.Owner.Sprite.ChangeLayer(1);
		Console.WriteLine("INITIALIZED");
		//var script = this.Owner.GetComponent("NewZilch") as NewZilch;
		//var script = this.Owner.GetComponent("NewZilch") as NewZilch;
		//var script = this.Owner.SpriteText.Font;
		//Console.WriteLine(script);
		//Console.WriteLine(this.Butts);
		//Console.WriteLine(this.IsTrue);
		//Console.WriteLine(this.Comp);
		//Console.WriteLine(this.StrMes);
		
		
		//Events.Connect(script.Owner, Events.Any, this.OnSomeEvent);
	}
	
	function Destroy()
	{
	}
}

class FadeIn : ZilchComponent
{
	var Local:Boolean = true;
	var EndPos:Real3 = Real3();
	var EndColor:Real4 = Real4(1,1,1,1);
	
	constructor() : base()
	{
	}
	
	function Initialize()
	{
		//this.Owner.Sprite.ChangeLayer(1);
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
		
		//ar toSend = new ExplosionEvent:EventData();
		//Events.Send(this.Owner, Events.Explosion, toSend);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		//this.TextObject.Text = this.Text.Get();
		if (InputManager.IsKeyDown(Keys.UP))
		{
			Console.WriteLine("UP");
		}
	}
}

class Parent : ZilchComponent
{
	var Parent:String = null;
	
	constructor() : base()
	{
	}
	
	function Initialize()
	{
		if (this.Parent != null)
		{
			var parent = ZInterface.ObjectSystem.FindObjectByName(this.Parent);
			if (parent != null)
			{
				parent.AddChild(this.Owner);
				//this.Owner.InheritPosition = false;
			}
			else
			{
				Console.WriteLine(String.Concatenate(this.Parent, " Not Found!"));
			}
		}
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
		
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		//this.TextObject.Text = this.Text.Get();
		if (InputManager.IsKeyDown(Keys.UP))
		{
			this.Owner.Parent.Transform.Translate(0, 1, 0);
			Console.WriteLine(this.Owner.Transform.GetTranslation());
			Console.WriteLine(this.Owner.Transform.GetLocalTranslation());
		}
	}
}

class Dot
{
	var Object: GameObject = null;
	
	constructor()
	{
		this.Object = ZInterface.ObjectSystem.CreateObject();
		
		this.Object.AddComponent("Transform");
		this.Object.Transform.SetTranslation(Real3(0,0,-1));
		//Console.WriteLine(this.Object.Transform.GetTranslation());
		this.Object.Transform.Scale(0.05, 0.05, 0.05);
		
		this.Object.AddComponent("Sprite");
		this.Object.Sprite.ChangeTexture("Circle.png");
		
	}
	
	
}


class Cinder
{
	[Static]
	var ScreenUnitRatioX:Real = 3.07919694543663;
	
	[Static]
	var ScreenUnitRatioY:Real = 1.732051615138131;
	
	//NEEDS FIXED ANY TYPE?
	/*[Static]
	function Connect(eventListener:Josh, eventName:String, functionDelegate:delegate(e:KeyEvent))
	{
		EventSystem.Connect(eventName, functionDelegate);
	}
	*/
	[Static]
	function MouseToWorldZPlane():Real2
	{
		var position = Camera.GetWorldMousePosition();
		//position.X *= 3.07919694543663;
		//position.Y *= 3.07919694543663;
		var cameraPos = Camera.Main.Owner.Transform.GetTranslation();
		position.X += cameraPos.X;
		position.Y += cameraPos.Y;
		//Console.WriteLine(position);
		
		return position;
	}

	sends UpdateEvent:UpdateEvent;
	sends KANY:KeyEvent;
}
