/******************************************************************************/
/*!
\file   UIButtons.z
\author Joshua Biggs
\par    Course: GAM205
\par    All content 2014 DigiPen (USA) Corporation, all rights reserved.
\brief  WinMain.cpp is the starting place for the engine. This initializes all the systems and
starts the game loop.
*/
/******************************************************************************/

class ExitButton : Component
{
	var Detector: MouseDetector = null;
	var EnterSound:Sound = null;
	var Confirmation:ZArray = null;
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		this.Confirmation = ZInterface.ObjectSystem.LoadLevelAdditive("Confirmation");
		
		this.EnterSound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
		this.Owner.Sprite.ChangeLayer(1);
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (0.75 * 8), 0));
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (e.State == MouseState.MouseInside)
		{
			//Console.WriteLine(InputManager.IsMouseTriggered(Mouse.LEFT));
			
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				if (this.Owner.Sprite.GetColor().W == 1)
				{
					var len = this.Confirmation.Length;
					for (var i:Integer = 0; i < len; i += 1)
					{
						this.Confirmation.Get(i).Sprite.ChangeColor(1,1,1,1);
					}
					foreach (var obj in this.MenuObjects)
					{
						obj.Sprite.ChangeColor(1,1,1,0);
					}
				}
			}
			this.Owner.Sprite.ChangeTexture("UIExitWhite.png");
			
		}
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
			
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIExitBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}

class ResumeButton : Component
{
	var Detector: MouseDetector = null;
	var EnterSound:Sound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
  
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		
		//Console.WriteLine(this.Owner.GetName());
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.323 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		this.MenuObjects.Get(0).Sprite.ChangeLayer(1);
		this.MenuObjects.Get(1).Sprite.ChangeLayer(1);
		this.Owner.Sprite.ChangeLayer(1);
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		//Console.WriteLine("DIMENSIONS: ");
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		//Console.WriteLine(ZInterface.ObjectSystem.FindObjectByID(10));
		
		this.MenuObjects.Get(0).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y, 0));
		this.MenuObjects.Get(1).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y + (1 * 8), 0));
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y + (0.45 * 8), 0));
		//Console.WriteLine(camerapos);
		//Console.WriteLine(this.Owner.Transform.GetTranslation());
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		//Console.WriteLine("DIMENSIONS: ");
		//Console.WriteLine(Camera.Main.Owner.Transform.GetTranslation());
		//Console.WriteLine(this.Detector.Rect.X, this.Detector.Rect.Y);
		//Console.WriteLine(this.Detector.Rect.TopLeft(), this.Detector.Rect.TopRight());
		//Console.WriteLine(this.Detector.Rect.BottomLeft(), this.Detector.Rect.BottomRight());
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		else
		{
			ZInterface.WindowSystem.SetCursor(true);
		}
		if (e.State == MouseState.MouseInside)
		{
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				foreach(var obj in this.MenuObjects)
				{
					obj.Sprite.ChangeColor(1,1,1,0);
				}
				ZInterface.TogglePaused();
				if (ZInterface.IsPaused())
				{
					ZInterface.SetSceneShader("Blur");
				}
				else
				{
					ZInterface.SetSceneShader("Passthrough");
				}
				ZInterface.WindowSystem.ToggleCursor();
			}
			this.Owner.Sprite.ChangeTexture("UIResumeWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIResumeBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}

class HowToPlayButton : Component
{
	var Detector: MouseDetector = null;
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
	var HowToPlay:GameObject = null;
	
	var EnterSound:Sound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
	
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		this.Owner.Sprite.ChangeLayer(1);
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		this.HowToPlay = ZInterface.ObjectSystem.FindObjectByID(15);
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (0.15 * 8), 0));
		this.HowToPlay.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y, 0));
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		if (e.State == MouseState.MouseInside)
		{
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				foreach (var obj in this.MenuObjects)
				{
					obj.Sprite.ChangeColor(1,1,1,0);
				}
				this.HowToPlay.Sprite.ChangeColor(1,1,1,1);
				
			}
			this.Owner.Sprite.ChangeTexture("UIHowToPlayWhite.png");
			//Console.WriteLine("Outside");
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIHowToPlayBlack.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
		}
		//Console.WriteLine("MOUSE!");
	}
	
}

class InstructionsMenu : Component
{
	var Detector: MouseDetector = null;
	
	var SpawnedObject:GameObject = null;
	
	var IsMicrophone:Boolean = false;
	var EnterSound:Sound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
  
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		this.Owner.Sprite.ChangeLayer(1);
		this.SpawnedObject = ZInterface.ObjectSystem.CreateObject();
		this.SpawnedObject.AddComponent("Transform");
		//this.SpawnedObject.Transform.SetTranslation(Real3(0, -1,0));
		this.SpawnedObject.Transform.SetScale(Real3(0.75,0.75,0));
		this.SpawnedObject.AddComponent("Sprite");
		this.SpawnedObject.Sprite.ChangeTexture("UIGotItBlack.png");
		this.SpawnedObject.Sprite.ChangeColor(1,1,1,0);
		this.SpawnedObject.Sprite.ChangeLayer(1);
		this.Detector = new MouseDetector(this.SpawnedObject, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		var scale = this.Owner.Transform.GetScale();
		this.Owner.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		scale = this.SpawnedObject.Transform.GetScale();
		this.SpawnedObject.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
		EventSystem.Connect("KESCAPE", this.EscapeIsPressed);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.SpawnedObject.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (1.11 * 8), 0));
		
		var color = this.Owner.Sprite.GetColor();
		this.SpawnedObject.Sprite.ChangeColor(color.X, color.Y, color.Z, color.W);
		//var dimensions = this.Owner.Transform.GetScreenPosition(Real2(1, 0.21));
		//this.Detector.Rect.Width = 8 * dimensions.X;
		//this.Detector.Rect.Height = dimensions.Y;
	}
	
	function EscapeIsPressed(e: KeyEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		this.SpawnedObject.Sprite.ChangeColor(1,1,1,0);
		this.Owner.Sprite.ChangeColor(1,1,1,0);
		this.Owner.Sprite.ChangeTexture("UIKeyboardMovement.png");
		this.IsMicrophone = false;
		
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (e.State == MouseState.MouseInside)
		{	
			
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				
				if (this.IsMicrophone)
				{
					if (this.MenuObjects.Count == 0)
					{
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
					}
					this.Owner.Sprite.ChangeTexture("UIKeyboardMovement.png");
					this.Owner.Sprite.ChangeColor(1,1,1,0);
					foreach (var obj in this.MenuObjects)
					{
						obj.Sprite.ChangeColor(1,1,1,1);
					}
					
					this.IsMicrophone = false;
					return;
				}
				
				this.IsMicrophone = true;
				this.Owner.Sprite.ChangeTexture("UIInstructionsScreen.png");
			}
			
			this.SpawnedObject.Sprite.ChangeTexture("UIGotItWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			
			this.SpawnedObject.Sprite.ChangeTexture("UIGotItBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}

class Yes : Component
{
	var Detector: MouseDetector = null;
	var Background:GameObject = null;
	var Title:GameObject = null;
	
	var EnterSound:Sound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
  
	constructor() : base()
	{
	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		this.Owner.Sprite.ChangeLayer(1);
		
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 0.73;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		var scale = this.Owner.Transform.GetScale();
		this.Owner.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X - (0.61 * 8), camerapos.Y - (0.51 * 8), 0));

	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		if (e.State == MouseState.MouseInside)
		{	
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				ZInterface.QuitGame();
			}
			this.Owner.Sprite.ChangeTexture("UIYesWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			
			this.Owner.Sprite.ChangeTexture("UIYesBlack.png");
		}
	}
}

class No : Component
{
	var Detector: MouseDetector = null;
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
	var Background:GameObject = null;
	var Title:GameObject = null;
	
	var EnterSound:Sound = ZInterface.ResourceSystem.LoadSound("MainMenuScroll.wav");
  
	constructor() : base()
	{
	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(19));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(20));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(21));
		this.MenuObjects.Get(5).Sprite.ChangeLayer(1);
		this.MenuObjects.Get(6).Sprite.ChangeLayer(1);
		this.MenuObjects.Get(7).Sprite.ChangeLayer(1);
		this.Owner.Sprite.ChangeLayer(1);
		
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 0.73;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		var scale = this.Owner.Transform.GetScale();
		this.Owner.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
		EventSystem.Connect("KESCAPE", this.EscapeIsPressed);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X + (0.61 * 8), camerapos.Y - (0.51 * 8), 0));
		this.MenuObjects.Get(5).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y , 0));
		this.MenuObjects.Get(6).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y + 2.85, 0));
	}
	
	function EscapeIsPressed(e: KeyEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		foreach (var obj in this.MenuObjects)
		{
			obj.Sprite.ChangeColor(1,1,1,0);
		}
		this.Owner.Sprite.ChangeColor(1,1,1,0);
		
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		if (e.State == MouseState.MouseInside)
		{	
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				foreach (var obj in this.MenuObjects)
				{
					obj.Sprite.ChangeColor(1,1,1,1);
				}
				this.MenuObjects.Get(5).Sprite.ChangeColor(1,1,1,0);
				this.MenuObjects.Get(6).Sprite.ChangeColor(1,1,1,0);
				this.MenuObjects.Get(7).Sprite.ChangeColor(1,1,1,0);
				this.Owner.Sprite.ChangeColor(1,1,1,0);
				ZInterface.WindowSystem.SetCursor(true);
			}
			this.Owner.Sprite.ChangeTexture("UINoWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			this.EnterSound.Play();
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			
			this.Owner.Sprite.ChangeTexture("UINoBlack.png");
		}
	}
}