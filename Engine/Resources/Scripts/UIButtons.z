class ExitButton : Component
{
	var Detector: MouseDetector = null;
  
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (0.75 * 8), 0));
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (e.State == MouseState.MouseInside)
		{
			//Console.WriteLine(InputManager.IsMouseTriggered(Mouse.LEFT));
			
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				
				ZInterface.QuitGame();
			}
			this.Owner.Sprite.ChangeTexture("UIExitWhite.png");
			
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIExitBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}

class ResumeButton : Component
{
	var Detector: MouseDetector = null;
	
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
  
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.323 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		Console.WriteLine("DIMENSIONS: ");
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.MenuObjects.Get(0).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y, 0));
		this.MenuObjects.Get(1).Transform.SetTranslation(Real3(camerapos.X, camerapos.Y + (0.8775 * 8), 0));
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y + (0.45 * 8), 0));
		Console.WriteLine(camerapos);
		Console.WriteLine(this.Owner.Transform.GetTranslation());
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		//Console.WriteLine("DIMENSIONS: ");
		//Console.WriteLine(Camera.Main.Owner.Transform.GetTranslation());
		//Console.WriteLine(this.Detector.Rect.X, this.Detector.Rect.Y);
		//Console.WriteLine(this.Detector.Rect.TopLeft(), this.Detector.Rect.TopRight());
		//Console.WriteLine(this.Detector.Rect.BottomLeft(), this.Detector.Rect.BottomRight());
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		if (e.State == MouseState.MouseInside)
		{
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				foreach(var obj in this.MenuObjects)
				{
					obj.Sprite.ChangeColor(1,1,1,0);
				}
				ZInterface.TogglePaused();
			}
			this.Owner.Sprite.ChangeTexture("UIResumeWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIResumeBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}

class HowToPlayButton : Component
{
	var Detector: MouseDetector = null;
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
	var HowToPlay:GameObject = null;
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		this.Detector = new MouseDetector(this.Owner, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		this.HowToPlay = ZInterface.ObjectSystem.FindObjectByID(15);
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
		this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
		
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.Owner.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (0.15 * 8), 0));
		this.HowToPlay.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y, 0));
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (this.Owner.Sprite.GetColor().W == 0)
		{
			return;
		}
		if (e.State == MouseState.MouseInside)
		{
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				foreach (var obj in this.MenuObjects)
				{
					obj.Sprite.ChangeColor(1,1,1,0);
				}
				this.HowToPlay.Sprite.ChangeColor(1,1,1,1);
				
			}
			this.Owner.Sprite.ChangeTexture("UIHowToPlayWhite.png");
			//Console.WriteLine("Outside");
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			this.Owner.Sprite.ChangeTexture("UIHowToPlayBlack.png");
		}
		//Console.WriteLine("MOUSE!");
	}
	
}

class InstructionsMenu : Component
{
	var Detector: MouseDetector = null;
	
	var SpawnedObject:GameObject = null;
	
	var IsMicrophone:Boolean = false;
  
	var MenuObjects:Array[GameObject] = new Array[GameObject]();
  
	constructor() : base()
	{

	}

	function Initialize(owner:GameObject)
	{
		this.Owner = owner;
		this.SpawnedObject = ZInterface.ObjectSystem.CreateObject();
		this.SpawnedObject.AddComponent("Transform");
		//this.SpawnedObject.Transform.SetTranslation(Real3(0, -1,0));
		this.SpawnedObject.Transform.SetScale(Real3(0.75,0.75,0));
		this.SpawnedObject.AddComponent("Sprite");
		this.SpawnedObject.Sprite.ChangeTexture("UIGotItBlack.png");
		this.SpawnedObject.Sprite.ChangeColor(1,1,1,0);
		
		this.Detector = new MouseDetector(this.SpawnedObject, this.OnMouseEvent);
		this.Detector.Rect.Width = 8 * 1.5;
		this.Detector.Rect.Height = 0.33 * 8;
		this.Detector.Offset = Real2(0, 0.02 * 8);
		
		var scale = this.Owner.Transform.GetScale();
		this.Owner.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		scale = this.SpawnedObject.Transform.GetScale();
		this.SpawnedObject.Transform.SetScale(Real3(scale.X * 8, scale.Y * 8, scale.Z * 8));
		
		EventSystem.Connect(Events.UpdateEvent, this.LogicUpdate);
	}
	
	function LogicUpdate(e: UpdateEvent)
	{
		var camerapos = Camera.Main.Owner.Transform.GetTranslation();
		this.SpawnedObject.Transform.SetTranslation(Real3(camerapos.X, camerapos.Y - (1.11 * 8), 0));
		
		var color = this.Owner.Sprite.GetColor();
		this.SpawnedObject.Sprite.ChangeColor(color.X, color.Y, color.Z, color.W);
		//var dimensions = this.Owner.Transform.GetScreenPosition(Real2(1, 0.21));
		//this.Detector.Rect.Width = 8 * dimensions.X;
		//this.Detector.Rect.Height = dimensions.Y;
	}
	
	function OnMouseEvent(e: MouseEvent)
	{
		if (e.State == MouseState.MouseInside)
		{	
			
			if (InputManager.IsMouseTriggered(Mouse.LEFT))
			{
				
				if (this.IsMicrophone)
				{
					if (this.MenuObjects.Count == 0)
					{
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(10));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(11));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(12));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(13));
						this.MenuObjects.Add(ZInterface.ObjectSystem.FindObjectByID(14));
					}
					this.Owner.Sprite.ChangeTexture("UIKeyboardMovement.png");
					this.Owner.Sprite.ChangeColor(1,1,1,0);
					foreach (var obj in this.MenuObjects)
					{
						obj.Sprite.ChangeColor(1,1,1,1);
					}
					
					this.IsMicrophone = false;
					return;
				}
				
				this.IsMicrophone = true;
				this.Owner.Sprite.ChangeTexture("UIInstructionsScreen.png");
			}
			
			this.SpawnedObject.Sprite.ChangeTexture("UIGotItWhite.png");
		}
		else if (e.State == MouseState.MouseEnter)
		{
			//Console.WriteLine("Enter");
			
		}
		else if (e.State == MouseState.MouseOutside)
		{
			//Console.WriteLine("Exit");
			
			this.SpawnedObject.Sprite.ChangeTexture("UIGotItBlack.png");
		}
		else
		{
			
		}
		//Console.WriteLine("MOUSE!");
	}
}